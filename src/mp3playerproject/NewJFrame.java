/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

//変更テスト２１：２１

package mp3playerproject;

import java.io.File;
import java.net.MalformedURLException;
import java.util.logging.Level;
import java.util.logging.Logger;
 
import javafx.scene.media.AudioClip;
/**
 *フレームのボタンを押したときの説明
 * @author Sato Masaya
 */
public class NewJFrame extends javax.swing.JFrame {

    //変数宣言
    static Engine SongEngine;
    
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        
        //上のテキストフィールドにようこそと表示する
        NowPlayingTextField.setText("Welcome!!");
        
        //下のテキストフィールドSongOrderTextFieldにPEEKMAX分の曲順を表示する。
        SongOrderTextField.setText(SongEngine.getSongOrderText());
        SongEngine.SongOrderText="";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        SongOrderTextField = new javax.swing.JTextField();
        NowPlayingTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("play");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("shuffle");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("next");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        SongOrderTextField.setText("jTextField2");
        jScrollPane1.setViewportView(SongOrderTextField);

        NowPlayingTextField.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NowPlayingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 31, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(NowPlayingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * プレイ時のアクションメソッド
     * @param evt
     * "play"ボタンを押したときのアクションの説明
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // 曲が流れる。流れる曲はNowListの再生番号NowPlayingNumberである。
	SongEngine.playSong();
        
        //上のテキストフィールドに再生中の曲名を表示する
        NowPlayingTextField.setText("Now playing  " + SongEngine.NowList.get(SongEngine.NowPlayingNumber).name);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * シャッフル時のアクションメソッド
     * @param evt
     * "shuffle"ボタンを押したときのアクションの説明
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //シャッフルする
        SongEngine.Shuffle();
        
        //曲が流れる
        SongEngine.playSong();
        
        //上のテキストフィールドにシャッフル後の１番目の曲名を表示する
        NowPlayingTextField.setText("Now playing  " + SongEngine.NowList.get(SongEngine.NowPlayingNumber).name);
        
        //下のテキストフィールドSongOrderTextFieldにPEEKMAX分の曲順を表示する。
        SongOrderTextField.setText(SongEngine.getSongOrderText());
        SongEngine.SongOrderText = "";
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * 次へ再生時のアクションメソッド
     * @param evt
     * "next"ボタンを押したときのアクションの説明
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // 次に再生する曲を手に入れる。
        Song ss =SongEngine.getNextSong();
        
        //曲を流す。
        SongEngine.playSong();
        
        //上のテキストフィールドに次の再生中の曲名を表示する
        NowPlayingTextField.setText("Now playing  " + SongEngine.NowList.get(SongEngine.NowPlayingNumber).name);
        
        //下のテキストフィールドにPEEKMAX分の曲順を表示する。
        SongOrderTextField.setText(SongEngine.getSongOrderText());
        SongEngine.SongOrderText = "";
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * メインメソッド
     * @param args the command line arguments
     * 聴きたい曲を今のリストNowListに入れる
     */
    public static void main(String args[]) {
            //聴きたい曲情報を準備する。
            int number =20;
            Song[] kikitaiSongs = new Song[number];
            String[] a = {"おやすみ.mp3","カジノ.mp3","ギター.mp3","ゲーム.mp3","のんき.mp3",
                "メンソーレ.mp3","開幕.mp3","おやすみ前.mp3","おはようのキスを.mp3","ひびきのために.mp3",
                "気分一新.mp3","休日はまったり.mp3","君が景色に.mp3","月のない夜.mp3","大当たり.mp3",
                "やったぜ.mp3","パステルカラー.mp3","バードランド.mp3","めいからめい.mp3","日曜のラジオ.mp3"};
            
            //エンジンを起動する。再生、シャッフルなどが可能になる
            SongEngine = new Engine();
            
            //プロンプト上に曲順と曲名を表示
            for (int i = 0; i < number; i++) {
                kikitaiSongs[i] = new Song(a[i]);
                System.out.print(kikitaiSongs[i].name);
            }
            System.out.println();
            
            //聴きたい曲を今のリストNowListに入れる
            SongEngine.setSongs(kikitaiSongs);
            
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NowPlayingTextField;
    private javax.swing.JTextField SongOrderTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
